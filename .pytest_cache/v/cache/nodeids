[
  "tests/test_biblio.py::TestBibtexParser::test_bib1",
  "tests/test_biblio.py::TestBibtexParser::test_bib2",
  "tests/test_biblio.py::TestBibtexParser::test_parse_names",
  "tests/test_biblio.py::TestPersonName::test_capitalization",
  "tests/test_biblio.py::TestPersonName::test_could_be",
  "tests/test_biblio.py::TestPersonName::test_equality",
  "tests/test_biblio.py::TestPersonName::test_names",
  "tests/test_doc_document.py::TestDocument::test_bytestring_elements",
  "tests/test_doc_document.py::TestDocument::test_document_definitions",
  "tests/test_doc_document.py::TestDocument::test_document_iter",
  "tests/test_doc_document.py::TestDocument::test_text_elements",
  "tests/test_doc_table.py::TestTable::test_default_table_parsers",
  "tests/test_doc_table.py::TestTable::test_spectroscopic_table",
  "tests/test_doc_table.py::TestTable::test_table_parsers_from_config",
  "tests/test_doc_table.py::TestTable::test_uvvis_table",
  "tests/test_doc_text.py::TestText::test_default_parsers",
  "tests/test_doc_text.py::TestText::test_no_cem_set",
  "tests/test_doc_text.py::TestText::test_parsers_set_from_config",
  "tests/test_doc_text.py::TestText::test_set_cem",
  "tests/test_extract.py::TestExtract::test_melting_point_heading_salt",
  "tests/test_extract.py::TestExtract::test_parse_control_character",
  "tests/test_model.py::TestModel::test_is_contextual",
  "tests/test_model.py::TestModel::test_is_unidentified",
  "tests/test_model.py::TestModel::test_serialize",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr1",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr2",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr3",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr4",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr5",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr6",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_abbr7",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_document",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_equiv1",
  "tests/test_nlp_abbrev.py::TestChemAbbreviationDetector::test_equiv2",
  "tests/test_nlp_cem.py::TestCrfCemTagger::test_false_pos",
  "tests/test_nlp_cem.py::TestCemDictionaryTagger::test_unicode_combining_characters",
  "tests/test_nlp_cem.py::TestCemTagger::test_cems_stoplist",
  "tests/test_nlp_cem.py::TestCemTagger::test_stoplist",
  "tests/test_nlp_pos.py::TestApPosTagger::test_tag_simple",
  "tests/test_nlp_pos.py::TestApPosTagger::test_text_sentence",
  "tests/test_nlp_pos.py::TestChemApPosTagger::test_tag_simple",
  "tests/test_nlp_pos.py::TestChemApPosTagger::test_text_sentence",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_chemtext_sentence",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_colon",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_eg_et_al",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_et_al",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_et_al2",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_et_al_end",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_fig_bracket",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_lowercase_sentence_start",
  "tests/test_nlp_sentence.py::TestChemSentenceTokenizer::test_punkt_tokenizer",
  "tests/test_nlp_tag.py::TestDictionaryTagger::test_dictionary_simple",
  "tests/test_nlp_tag.py::TestDictionaryTagger::test_dictionary_simple2",
  "tests/test_nlp_tag.py::TestDictionaryTagger::test_dictionary_simple3",
  "tests/test_nlp_tag.py::TestDictionaryTagger::test_dictionary_simple4",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_bracket1",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_brackets_quotes",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_colon_time",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_contractions",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_decimal_number",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_digit_comma",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_digit_comma_multiple",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_digit_comma_space",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_dollar",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_exclamation",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_final_full_stop",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_full_stop_following",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_percentage",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_phone_number",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_quote",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_text_sentence",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_theyll",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_url",
  "tests/test_nlp_tokenize.py::TestWordTokenizer::test_word_colon",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_abbreviation_definition",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_abbreviation_sentence_end",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_abbreviations",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_apostrophe_quote",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket1",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket3",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket4",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket5",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket6",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket7",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_chem2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_chem_identifier",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_chems",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_hyphen",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_internal_split",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_range",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_subsequent",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_subsequent2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracket_whitespace_error",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_bracketed_url",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_brackets_quotes",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_chem_formula",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_chem_names",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_chemtext_sentence",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_chemtext_sentence2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_colon_chem",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_colon_time",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_colons",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma1",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma3",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma4",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma5",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_comma6",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_curly_bracket",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_deuterated",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_digit_comma",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_digit_comma_multiple",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_digit_comma_space",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_dollar",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_double_apostrophe_quote",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_element_hyphen",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_exclamation",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_final_full_stop",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_full_stop_following",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_hyphen_nosplit",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_hyphen_split",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_hyphen_twice",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_identifiers",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_ir_whitespace_error",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_iron_states",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_lambda",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_linesymbols",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_minus_hyphen",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_more_brackets",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_ms",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_multihyphens",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_nmr_types",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_nmr_whitespace_error",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_operators",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_percentage",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_polymer",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_positive_charge",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_prime",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quantities",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quote",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quote_apostrophe",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quote_apostrophe2",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quote_apostrophe3",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_quote_colon",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_reagents_list",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_rings",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_saccharide",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_sentence_end",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_slashes",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_space_colon_digit",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_square_bracket",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_stereo",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_symbols",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_theyll",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_tilde",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_trademarks",
  "tests/test_nlp_tokenize.py::TestChemTokenizer::test_word_colon",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_bracket1",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_bracket_chems",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_brackets_quotes",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_chem_formula",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_chem_names",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_colon_time",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_digit_comma",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_digit_comma_multiple",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_digit_comma_space",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_dollar",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_exclamation",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_final_full_stop",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_full_stop_following",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_percentage",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_quote",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_theyll",
  "tests/test_nlp_tokenize.py::TestFineWordTokenizer::test_word_colon",
  "tests/test_parse_cem.py::TestParseCem::test_acs_journals",
  "tests/test_parse_cem.py::TestParseCem::test_comma_separated",
  "tests/test_parse_cem.py::TestParseCem::test_comma_separated_colon",
  "tests/test_parse_cem.py::TestParseCem::test_high_label_colon",
  "tests/test_parse_cem.py::TestParseCem::test_incorrect_mp_tagged",
  "tests/test_parse_cem.py::TestParseCem::test_incorrect_nmr_tagged",
  "tests/test_parse_cem.py::TestParseCem::test_inorganic_chemical_formula_1",
  "tests/test_parse_cem.py::TestParseCem::test_inorganic_chemical_formula_2",
  "tests/test_parse_cem.py::TestParseCem::test_inorganic_chemical_formula_3",
  "tests/test_parse_cem.py::TestParseCem::test_inorganic_chemical_formula_4",
  "tests/test_parse_cem.py::TestParseCem::test_inorganic_chemical_formula_5",
  "tests/test_parse_cem.py::TestParseCem::test_nmr_after",
  "tests/test_parse_cem.py::TestParseCem::test_no_doi",
  "tests/test_parse_cem.py::TestParseCem::test_no_email",
  "tests/test_parse_cem.py::TestParseCem::test_no_fig",
  "tests/test_parse_cem.py::TestParseCem::test_no_issn",
  "tests/test_parse_cem.py::TestParseCem::test_no_panel_label",
  "tests/test_parse_cem.py::TestParseCem::test_no_patent_num",
  "tests/test_parse_cem.py::TestParseCem::test_no_trailing_semicolon",
  "tests/test_parse_cem.py::TestParseCem::test_section_numeral",
  "tests/test_parse_cem.py::TestParseCem::test_section_numeral2",
  "tests/test_parse_cem.py::TestParseCem::test_simple",
  "tests/test_parse_cem.py::TestParseCem::test_to_yield_phrase",
  "tests/test_parse_cem.py::TestParseCem::test_without_tags",
  "tests/test_parse_cem.py::TestParseCemHeading::test_compound_label",
  "tests/test_parse_cem.py::TestParseCemHeading::test_example_name",
  "tests/test_parse_cem.py::TestParseCemHeading::test_label_list",
  "tests/test_parse_cem.py::TestParseCemHeading::test_preparation_of",
  "tests/test_parse_cem.py::TestParseCemHeading::test_section_number",
  "tests/test_parse_cem.py::TestParseCemHeading::test_section_number2",
  "tests/test_parse_cem.py::TestParseHeading::test_background",
  "tests/test_parse_cem.py::TestParseHeading::test_background_art",
  "tests/test_parse_cem.py::TestParseHeading::test_cas",
  "tests/test_parse_cem.py::TestParseHeading::test_comma_label",
  "tests/test_parse_cem.py::TestParseHeading::test_comparative_example",
  "tests/test_parse_cem.py::TestParseHeading::test_example_colon",
  "tests/test_parse_cem.py::TestParseHeading::test_fluorescent_nano_beads",
  "tests/test_parse_cem.py::TestParseHeading::test_label_14",
  "tests/test_parse_cem.py::TestParseHeading::test_label_list",
  "tests/test_parse_cem.py::TestParseHeading::test_name_label",
  "tests/test_parse_cem.py::TestParseHeading::test_prep_label",
  "tests/test_parse_cem.py::TestParseHeading::test_preparation_of",
  "tests/test_parse_cem.py::TestParseHeading::test_reference_example",
  "tests/test_parse_cem.py::TestParseHeading::test_section_decimal",
  "tests/test_parse_cem.py::TestParseHeading::test_section_numeral",
  "tests/test_parse_cem.py::TestParseHeading::test_step",
  "tests/test_parse_cem.py::TestParseHeading::test_test",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_afforded_phrase",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_compound",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_synthesis_of",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_synthesis_of2",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_synthesis_of_compound",
  "tests/test_parse_cem.py::TestParseLabelPhrase::test_to_give_phrase",
  "tests/test_parse_cem.py::TestParseDocument::test_consecutive_headings",
  "tests/test_parse_cem.py::TestParseDocument::test_consecutive_headings2",
  "tests/test_parse_context.py::TestParseApparatus::test_apparatus",
  "tests/test_parse_context.py::TestParseApparatus::test_apparatus2",
  "tests/test_parse_context.py::TestParseApparatus::test_apparatus_record",
  "tests/test_parse_context.py::TestParseApparatus::test_apparatus_record2",
  "tests/test_parse_definitions.py::TestParseDefinitions::test_curie_definition",
  "tests/test_parse_definitions.py::TestParseDefinitions::test_curie_definition_brackets",
  "tests/test_parse_definitions.py::TestParseDefinitions::test_greek_symbols",
  "tests/test_parse_definitions.py::TestParseDefinitions::test_uv_vis_definition",
  "tests/test_parse_ir.py::TestParseIr::test_ir1",
  "tests/test_parse_ir.py::TestParseIr::test_ir2",
  "tests/test_parse_ir.py::TestParseIr::test_ir3",
  "tests/test_parse_ir.py::TestParseIr::test_ir4",
  "tests/test_parse_mp.py::TestParseMp::test_afforded",
  "tests/test_parse_mp.py::TestParseMp::test_bracket",
  "tests/test_parse_mp.py::TestParseMp::test_bracket_obtained",
  "tests/test_parse_mp.py::TestParseMp::test_cem_yield",
  "tests/test_parse_mp.py::TestParseMp::test_colon",
  "tests/test_parse_mp.py::TestParseMp::test_degrees_only",
  "tests/test_parse_mp.py::TestParseMp::test_gave",
  "tests/test_parse_mp.py::TestParseMp::test_gave_label",
  "tests/test_parse_mp.py::TestParseMp::test_give_label",
  "tests/test_parse_mp.py::TestParseMp::test_having",
  "tests/test_parse_mp.py::TestParseMp::test_m_pt",
  "tests/test_parse_mp.py::TestParseMp::test_melting_at",
  "tests/test_parse_mp.py::TestParseMp::test_melting_point",
  "tests/test_parse_mp.py::TestParseMp::test_melting_point_colon",
  "tests/test_parse_mp.py::TestParseMp::test_melting_point_of",
  "tests/test_parse_mp.py::TestParseMp::test_melting_point_range",
  "tests/test_parse_mp.py::TestParseMp::test_melting_point_was",
  "tests/test_parse_mp.py::TestParseMp::test_melting_range",
  "tests/test_parse_mp.py::TestParseMp::test_mp1",
  "tests/test_parse_mp.py::TestParseMp::test_mp2",
  "tests/test_parse_mp.py::TestParseMp::test_mp3",
  "tests/test_parse_mp.py::TestParseMp::test_mp4",
  "tests/test_parse_mp.py::TestParseMp::test_mp5",
  "tests/test_parse_mp.py::TestParseMp::test_mp6",
  "tests/test_parse_mp.py::TestParseMp::test_mp7",
  "tests/test_parse_mp.py::TestParseMp::test_mp8",
  "tests/test_parse_mp.py::TestParseMp::test_mp9",
  "tests/test_parse_mp.py::TestParseMp::test_of_about",
  "tests/test_parse_mp.py::TestParseMp::test_range_to",
  "tests/test_parse_mp.py::TestParseMp::test_solvent",
  "tests/test_parse_mp.py::TestParseMp::test_solvent2",
  "tests/test_parse_mp.py::TestParseMp::test_solvent3",
  "tests/test_parse_mp.py::TestParseMp::test_tilde",
  "tests/test_parse_mp.py::TestParseMp::test_tm0",
  "tests/test_parse_mp.py::TestParseMpCompound::test_mpc1",
  "tests/test_parse_mp.py::TestParseMpCompound::test_mpc2",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr1",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr10",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr11",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr12",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr13",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr2",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr3",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr4",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr5",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr6",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr7",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr8",
  "tests/test_parse_nmr.py::TestParseNmr::test_nmr9",
  "tests/test_parse_tg.py::TestParseTg::test_tg1",
  "tests/test_parse_tg.py::TestParseTg::test_tg2",
  "tests/test_parse_tg.py::TestParseTg::test_tg3",
  "tests/test_parse_tg.py::TestParseTg::test_tg4",
  "tests/test_parse_tg.py::TestParseTg::test_tg5",
  "tests/test_parse_tg.py::TestParseTg::test_tg6",
  "tests/test_parse_tg.py::TestParseTg::test_tg7",
  "tests/test_parse_tg.py::TestParseTg::test_tg8",
  "tests/test_parse_uvvis.py::TestParseUvvis::test_uvvis1",
  "tests/test_reader_acs.py::TestAcsHtmlReader::test_detect",
  "tests/test_reader_acs.py::TestAcsHtmlReader::test_direct_usage",
  "tests/test_reader_acs.py::TestAcsHtmlReader::test_document_usage",
  "tests/test_reader_elsevier.py::TestElsXMLReader::test_detect",
  "tests/test_reader_elsevier.py::TestElsXMLReader::test_direct_usage",
  "tests/test_reader_elsevier.py::TestElsXMLReader::test_document_usage",
  "tests/test_reader_markup.py::TestReaderHtml::test_linebreak",
  "tests/test_reader_markup.py::TestReaderHtml::test_linebreak2",
  "tests/test_reader_markup.py::TestReaderHtml::test_paragraphs",
  "tests/test_reader_markup.py::TestReaderHtml::test_paragraphs2",
  "tests/test_reader_rsc.py::TestRscHtmlReader::test_detect",
  "tests/test_reader_rsc.py::TestRscHtmlReader::test_direct_usage",
  "tests/test_reader_rsc.py::TestRscHtmlReader::test_document_usage",
  "tests/test_reader_uspto.py::TestUsptoReader::test_detect",
  "tests/test_reader_uspto.py::TestUsptoReader::test_direct_usage",
  "tests/test_reader_uspto.py::TestUsptoReader::test_document_usage",
  "tests/test_reading_cell+fig.py::TestAddingCellFigure::test_reader_adding",
  "tests/test_relex_snowball.py::TestSnowball::test_extract",
  "tests/test_relex_snowball.py::TestSnowball::test_load_snowball",
  "tests/test_relex_utils.py::TestRelexUtils::test_kmp",
  "tests/test_relex_utils.py::TestRelexUtils::test_match",
  "tests/test_relex_utils.py::TestRelexUtils::test_mode_rows",
  "tests/test_scrape_clean.py::TestCleaner::test_clean1",
  "tests/test_scrape_clean.py::TestCleaner::test_clean2",
  "tests/test_scrape_clean.py::TestCleaner::test_clean3",
  "tests/test_scrape_clean.py::TestCleaner::test_clean4",
  "tests/test_scrape_clean.py::TestCleaner::test_strip1",
  "tests/test_scrape_clean.py::TestCleaner::test_strip2",
  "tests/test_scrape_clean.py::TestCleaner::test_strip3",
  "tests/test_scrape_clean.py::TestCleaner::test_strip4",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_html1",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_html2",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_html3",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_kill_strong1",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_kill_strong2",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_kill_strong3",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_kill_strong4",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_leave_whitespace1",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_leave_whitespace2",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_leave_whitespace3",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_leave_whitespace4",
  "tests/test_scrape_clean.py::TestCleaner::test_strip_markup_doc",
  "tests/test_scrape_entity.py::TestSimpleScrape::test_listfield",
  "tests/test_scrape_entity.py::TestSimpleScrape::test_scrape",
  "tests/test_scrape_entity.py::TestSimpleScrape::test_serialize",
  "tests/test_scrape_entity.py::TestMultiScrape::test_scrape_multiple",
  "tests/test_scrape_entity.py::TestMultiScrape::test_scrape_results",
  "tests/test_scrape_entity.py::TestMultiScrape::test_serialize",
  "tests/test_scrape_entity.py::TestComplexScrape::test_scrape_multiple",
  "tests/test_scrape_entity.py::TestComplexScrape::test_scrape_results",
  "tests/test_scrape_entity.py::TestComplexScrape::test_serialize",
  "tests/test_scrape_entity.py::TestCssScrape::test_scrape_multiple",
  "tests/test_scrape_entity.py::TestCssScrape::test_scrape_results",
  "tests/test_scrape_entity.py::TestCssScrape::test_serialize",
  "tests/test_scrape_fields.py::TestFieldScrape::test_bool",
  "tests/test_scrape_fields.py::TestFieldScrape::test_date",
  "tests/test_scrape_fields.py::TestFieldScrape::test_float",
  "tests/test_scrape_fields.py::TestFieldScrape::test_int",
  "tests/test_scrape_fields.py::TestFieldScrape::test_lowerstring",
  "tests/test_scrape_fields.py::TestFieldScrape::test_serialize",
  "tests/test_scrape_fields.py::TestFieldScrape::test_string",
  "tests/test_scrape_rsc.py::TestRscSubstitutor::test_beta_gamma",
  "tests/test_scrape_rsc.py::TestRscSubstitutor::test_prime",
  "tests/test_scrape_rsc.py::TestRscSubstitutor::test_small_beta",
  "tests/test_scrape_rsc.py::TestStripRscHtml::test_title_footnote",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_abstract",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_doi",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_html_url",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_journal",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_landing_url",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_pdf_url",
  "tests/test_scrape_rsc.py::TestRscSearchScraper::test_title",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_abstract",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_doi",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_html_url",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_journal",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_landing_url",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_pdf_url",
  "tests/test_scrape_rsc.py::TestRscSearchDocument::test_title",
  "tests/test_scrape_selector.py::TestSelector::test_html_css",
  "tests/test_scrape_selector.py::TestSelector::test_html_xpath",
  "tests/test_text.py::TestNormalization::test_normalize",
  "tests/test_text.py::TestLaTeX::test_latex_to_unicode_math",
  "tests/test_text.py::TestLaTeX::test_latex_to_unicode_names",
  "tests/test_text.py::TestLaTeX::test_latex_to_unicode_titles",
  "tests/test_text.py::TestExtraction::test_extract_emails",
  "tests/test_text_chem.py::TestRegex::test_inchi",
  "tests/test_text_chem.py::TestRegex::test_smiles",
  "tests/test_text_chem.py::TestRegex::test_solvent"
]